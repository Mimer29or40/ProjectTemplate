[project]
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
name = "your_module"
#version = ""  # Defined by setuptools_scm
description = "DESCRIPTION"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
authors = [
    { name = "AUTHOR1", email = "AUTHOR1@email.com" },
    { name = "AUTHOR2", email = "AUTHOR2@email.com" },
]
maintainers = [
    { name = "MAINTAINER1", email = "MAINTAINER1@email.com" },
    { name = "MAINTAINER2", email = "MAINTAINER2@email.com" },
]
keywords = [
    "KEYWORDS",
]
classifiers = [
    "Development Status :: 1 - Planning",
    #"Development Status :: 2 - Pre-Alpha",
    #"Development Status :: 3 - Alpha",
    #"Development Status :: 4 - Beta",
    #"Development Status :: 5 - Production/Stable",
    "Framework :: Flake8",
    "Framework :: Pytest",
    "Framework :: tox",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = []
dynamic = ["version"]

[project.urls]
Homepage = "http://URL"
Download = "http://DOWNLOAD_URL"
Source = "http://SOURCE_URL"
Documentation = "http://DOCUMENTATION_URL"
"Issue Tracker" = "http://ISSUES_URL"

[project.optional-dependencies]
dev = [
    "tox>=4.24.1",
    "pytest>=8.3.4",
    "pyinstaller>=6.11.1",
]

[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "__version__.py"
local_scheme = "no-local-version"

[tool.ruff]
# https://docs.astral.sh/ruff/settings/
fix = true
line-length = 100

[tool.ruff.format]
# https://docs.astral.sh/ruff/settings/#format
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/settings/#lint
select = [
    "F", # Pyflakes
    "E", # pycodestyle
    "W", # pycodestyle
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyupgrade
    "ANN", # flake8-annotations
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    "DTZ", # flake8-datetimez
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "LOG", # flake8-logging
    "G", # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TC", # flake8-type-checking
    "INT", # flake8-gettext
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "TD", # flake8-todos
    "FIX", # flake8-_fixme
    "ERA", # eradicate
    "PD", # pandas-vet
    "PGH", # pygrep-hooks
    "C", # Pylint PL Convention
    "E", # Pylint PL Error
    "R", # Pylint PL Refactor
    "W", # Pylint PL Warning
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # NumPy-specific rules
    "AIR", # Airflow
    "PERF", # Perflint
    "FURB", # refurb
    "RUF", # Ruff-specific rules
]
ignore = [
    "N999", # pep8-naming: Invalid module name
    "D203", # pydocstyle: 1 blank line required before class docstring
    "D213", # pydocstyle: Multi-line docstring summary should start at the second line
    "COM812", # flake8-commas: missing trailing comma
    "DTZ001", # flake8-datetimez: `datetime.datetime()` called without a `tzinfo` argument
    "DTZ005", # flake8-datetimez: `datetime.datetime.now()` called without a `tz` argument
    "TD003", # flake8-fixmes: Missing issue link for this _TODO
    "FIX002", # flake8-todos: Line contains _TODO, consider resolving the issue
    "TRY003", # tryceratops: Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"test/*" = [
    "T201", # print found
    "T203", # pprint found
    "INP001", # flake8-no-pep420 - File is part of an implicit namespace package.
]

[tool.ruff.lint.isort]
# https://docs.astral.sh/ruff/settings/#lintisort
force-single-line = true
required-imports = ["from __future__ import annotations"]
